{\rtf1\ansi\ansicpg1252\cocoartf1561\cocoasubrtf400
{\fonttbl\f0\fnil\fcharset0 Menlo-Regular;\f1\fnil\fcharset0 Menlo-Bold;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red255\green255\blue255;\red46\green174\blue187;
\red47\green180\blue29;}
{\*\expandedcolortbl;;\csgray\c0;\csgray\c100000;\cssrgb\c20196\c73240\c78250;
\cssrgb\c20238\c73898\c14947;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\fs22 \cf2 \cb3 \CocoaLigature0 python manage.py makemigrations\
python manage.py migrate\
python manage.py shell\
Author.objects.create(first_name="Mike",last_name="Mike",email="mike@mike.com")\
Author.objects.create(first_name="Speros",last_name="Speros",email="speros@speros.com")\
Author.objects.create(first_name="John",last_name="John",email="john@john.com")\
Author.objects.create(first_name="Jadee",last_name="Jadee",email="jadee@jadee.com\'94)\
Author.objects.create(first_name="Jay",last_name="Jay",email="jay@jay.com")\
python manage.py makemigrations\
You are trying to add a non-nullable field 'notes' to author without a default; we can't do that (the database needs something to populate existing rows).\
Please select a fix:\
 1) Provide a one-off default now (will be set on all existing rows with a null value for this column)\
 2) Quit, and let me add a default in models.py\
Select an option: 1\
Please enter the default value now, as valid Python\
The datetime and django.utils.timezone modules are available, so you can do e.g. timezone.now\
Type 'exit' to exit this prompt\
>>> 'These are the authors notes'\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f1\b \cf4 \cb3 Migrations for 'books_authors':
\f0\b0 \cf2 \cb3 \
  
\f1\b \cf2 \cb3 apps/books_authors/migrations/0002_author_notes.py
\f0\b0 \cf2 \cb3 :\
    - Add field notes to author\
(DjanoEnv) Jaxons-MacBook-Pro:dojo_ninjas Jaxon$ python manage.py migrate\

\f1\b \cf4 \cb3 Operations to perform:
\f0\b0 \cf2 \cb3 \

\f1\b \cf2 \cb3   Apply all migrations: 
\f0\b0 \cf2 \cb3 admin, auth, books_authors, contenttypes, dojo, sessions\

\f1\b \cf4 \cb3 Running migrations:
\f0\b0 \cf2 \cb3 \
  Rendering model states...
\f1\b \cf5 \cb3  DONE
\f0\b0 \cf2 \cb3 \
  Applying books_authors.0002_author_notes...
\f1\b \cf5 \cb3  OK\
\pard\tx560\tx1120\tx1680\tx2240\tx2800\tx3360\tx3920\tx4480\tx5040\tx5600\tx6160\tx6720\pardirnatural\partightenfactor0

\f0\b0 \cf2 \cb3 a = Book.objects.get(id=5)\
a.name = "C#"\
a.save()\
a = Author.objects.get(id=5)\
a.first_name = "Ketul"\
a.save()\
\
Author.objects.first().books = [Book.objects.get(id = 1),Book.objects.get(id = 2)]\
\
Author.objects.get(id = 2).books = [Book.objects.get(id = 1),Book.objects.get(id = 2),Book.objects.get(id=3)]\
\
Author.objects.get(id = 3).books = [Book.objects.get(id = 1),Book.objects.get(id = 2),Book.objects.get(id=3),Book.objects.get(id = 4)]\
\
Author.objects.get(id = 4).books = [Book.objects.get(id = 1),Book.objects.get(id = 2),Book.objects.get(id=3),Book.objects.get(id = 4),Book.objects.last()]\
\
Book.objects.get(id = 3).authors.all()\
Book.objects.get(id = 3).authors.all().first().delete()\
Book.objects.get(id = 2).authors.add(Author.objects.get(id=5))\
Author.objects.get(id = 3).books.all()\
Author.objects.get(id = 2).books.all()\
\
\
\
\
}